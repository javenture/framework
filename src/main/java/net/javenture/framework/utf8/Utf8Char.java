package net.javenture.framework.utf8;


/*
	2017/12/22
 */
final public class Utf8Char
{
	/*
		https://en.wikipedia.org/wiki/List_of_Unicode_characters
	 */
	final public static char QUOTATION = '"';
	final public static char AMPERSAND = '&';
	final public static char APOSTROPHE = '\'';
	final public static char SLASH = '/';
	final public static char COLON = ':';
	final public static char SEMICOLON = ';';
	final public static char LESS_THEN = '<';
	final public static char GREATER_THEN = '>';
	final public static char NO_BREAK_SPACE = ' '; // U+00A0 (160) no-break space
	//	final public static char _ = ''; // iexcl	¡), // U+00A1 (161)  inverted exclamation mark
	//	final public static char _ = ''; // cent	¢), // U+00A2 (162)  cent sign
	//	final public static char _ = ''; // pound	£), // U+00A3 (163)  pound sign
	//	final public static char _ = ''; // curren	¤), // U+00A4 (164)  currency sign
	//	final public static char _ = ''; // yen	¥), // U+00A5 (165)  yen sign (yuan sign)
	//	final public static char _ = ''; // brvbar	¦), // U+00A6 (166)  broken bar (broken vertical bar)
	final public static char SECTION = '§'; // U+00A7 (167) section sign
	//	final public static char _ = ''; // uml	¨), // U+00A8 (168) diaeresis (spacing diaeresis); see Germanic umlaut
	final public static char COPYRIGHT = '©'; // U+00A9 (169) copyright symbol
	//	final public static char _ = ''; // ordf	ª), // U+00AA (170)  feminine ordinal indicator
	final public static char LEFT_ANGLE_QUOTATION = '«'; // U+00AB (171) left-pointing double angle quotation mark (left pointing guillemet)
	//	final public static char _ = ''; // not	¬), // U+00AC (172)  not sign
	//	final public static char _ = ''; // shy	 ), // U+00AD (173)  soft hyphen (discretionary hyphen)
	//	final public static char _ = ''; // reg	®), // U+00AE (174)  registered sign (registered trademark symbol)
	//	final public static char _ = ''; // macr	¯), // U+00AF (175) macron (spacing macron, overline, APL overbar)
	//	final public static char _ = ''; // deg	°), // U+00B0 (176)  degree symbol
	//	final public static char _ = ''; // plusmn	±), // U+00B1 (177)  plus-minus sign (plus-or-minus sign)
	//	final public static char _ = ''; // sup2	²), // U+00B2 (178)  superscript two (superscript digit two, squared)
	//	final public static char _ = ''; // sup3	³), // U+00B3 (179)  superscript three (superscript digit three, cubed)
	//	final public static char _ = ''; // acute	´), // U+00B4 (180) acute accent (spacing acute)
	//	final public static char _ = ''; // micro	µ), // U+00B5 (181)  micro sign
	//	final public static char _ = ''; // para	¶), // U+00B6 (182)  pilcrow sign (paragraph sign)
	//	final public static char _ = ''; // middot	·), // U+00B7 (183)  middle dot (Georgian comma, Greek middle dot)
	//	final public static char _ = ''; // cedil	¸), // U+00B8 (184) cedilla (spacing cedilla)
	//	final public static char _ = ''; // sup1	¹), // U+00B9 (185)  superscript one (superscript digit one)
	//	final public static char _ = ''; // ordm	º), // U+00BA (186)  masculine ordinal indicator
	//	final public static char _ = ''; // raquo	»), // U+00BB (187)  right-pointing double angle quotation mark (right pointing guillemet)
	//	final public static char _ = ''; // frac14	¼), // U+00BC (188)  vulgar fraction one quarter (fraction one quarter)
	//	final public static char _ = ''; // frac12	½), // U+00BD (189)  vulgar fraction one half (fraction one half)
	//	final public static char _ = ''; // frac34	¾), // U+00BE (190)  vulgar fraction three quarters (fraction three quarters)
	//	final public static char _ = ''; // iquest	¿), // U+00BF (191)  inverted question mark (turned question mark)
	//	final public static char _ = ''; // Agrave	À), // U+00C0 (192)	Latin capital letter A with grave accent (Latin capital letter A grave)
	//	final public static char _ = ''; // Aacute	Á), // U+00C1 (193)	Latin capital letter A with acute accent
	//	final public static char _ = ''; // Acirc	Â), // U+00C2 (194)	Latin capital letter A with circumflex
	//	final public static char _ = ''; // Atilde	Ã), // U+00C3 (195)	Latin capital letter A with tilde
	//	final public static char _ = ''; // Auml	Ä), // U+00C4 (196)	Latin capital letter A with diaeresis
	//	final public static char _ = ''; // Aring	Å), // U+00C5 (197)	Latin capital letter A with ring above (Latin capital letter A ring)
	//	final public static char _ = ''; // AElig	Æ), // U+00C6 (198)	Latin capital letter AE (Latin capital ligature AE)
	//	final public static char _ = ''; // Ccedil	Ç), // U+00C7 (199)	Latin capital letter C with cedilla
	//	final public static char _ = ''; // Egrave	È), // U+00C8 (200)	Latin capital letter E with grave accent
	//	final public static char _ = ''; // Eacute	É), // U+00C9 (201)	Latin capital letter E with acute accent
	//	final public static char _ = ''; // Ecirc	Ê), // U+00CA (202)	Latin capital letter E with circumflex
	//	final public static char _ = ''; // Euml	Ë), // U+00CB (203)	Latin capital letter E with diaeresis
	//	final public static char _ = ''; // Igrave	Ì), // U+00CC (204)	Latin capital letter I with grave accent
	//	final public static char _ = ''; // Iacute	Í), // U+00CD (205)	Latin capital letter I with acute accent
	//	final public static char _ = ''; // Icirc	Î), // U+00CE (206)	Latin capital letter I with circumflex
	//	final public static char _ = ''; // Iuml	Ï), // U+00CF (207)	Latin capital letter I with diaeresis
	//	final public static char _ = ''; // ETH	Ð), // U+00D0 (208)	Latin capital letter Eth
	//	final public static char _ = ''; // Ntilde	Ñ), // U+00D1 (209)	Latin capital letter N with tilde
	//	final public static char _ = ''; // Ograve	Ò), // U+00D2 (210)	Latin capital letter O with grave accent
	//	final public static char _ = ''; // Oacute	Ó), // U+00D3 (211)	Latin capital letter O with acute accent
	//	final public static char _ = ''; // Ocirc	Ô), // U+00D4 (212)	Latin capital letter O with circumflex
	//	final public static char _ = ''; // Otilde	Õ), // U+00D5 (213)	Latin capital letter O with tilde
	//	final public static char _ = ''; // Ouml	Ö), // U+00D6 (214)	Latin capital letter O with diaeresis
	//	final public static char _ = ''; // times	×), // U+00D7 (215)  multiplication sign
	//	final public static char _ = ''; // Oslash	Ø), // U+00D8 (216)	Latin capital letter O with stroke (Latin capital letter O slash)
	//	final public static char _ = ''; // Ugrave	Ù), // U+00D9 (217)	Latin capital letter U with grave accent
	//	final public static char _ = ''; // Uacute	Ú), // U+00DA (218)	Latin capital letter U with acute accent
	//	final public static char _ = ''; // Ucirc	Û), // U+00DB (219)	Latin capital letter U with circumflex
	//	final public static char _ = ''; // Uuml	Ü), // U+00DC (220)	Latin capital letter U with diaeresis
	//	final public static char _ = ''; // Yacute	Ý), // U+00DD (221)	Latin capital letter Y with acute accent
	//	final public static char _ = ''; // THORN	Þ), // U+00DE (222)	Latin capital letter THORN
	//	final public static char _ = ''; // szlig	ß), // U+00DF (223)	Latin small letter sharp s (ess-zed); see German Eszett
	//	final public static char _ = ''; // agrave	à), // U+00E0 (224)	Latin small letter a with grave accent
	//	final public static char _ = ''; // aacute	á), // U+00E1 (225)	Latin small letter a with acute accent
	//	final public static char _ = ''; // acirc	â), // U+00E2 (226)	Latin small letter a with circumflex
	//	final public static char _ = ''; // atilde	ã), // U+00E3 (227)	Latin small letter a with tilde
	//	final public static char _ = ''; // auml	ä), // U+00E4 (228)	Latin small letter a with diaeresis
	//	final public static char _ = ''; // aring	å), // U+00E5 (229)	Latin small letter a with ring above
	//	final public static char _ = ''; // aelig	æ), // U+00E6 (230)	Latin small letter ae (Latin small ligature ae)
	//	final public static char _ = ''; // ccedil	ç), // U+00E7 (231)	Latin small letter c with cedilla
	//	final public static char _ = ''; // egrave	è), // U+00E8 (232)	Latin small letter e with grave accent
	//	final public static char _ = ''; // eacute	é), // U+00E9 (233)	Latin small letter e with acute accent
	//	final public static char _ = ''; // ecirc	ê), // U+00EA (234)	Latin small letter e with circumflex
	//	final public static char _ = ''; // euml	ë), // U+00EB (235)	Latin small letter e with diaeresis
	//	final public static char _ = ''; // igrave	ì), // U+00EC (236)	Latin small letter i with grave accent
	//	final public static char _ = ''; // iacute	í), // U+00ED (237)	Latin small letter i with acute accent
	//	final public static char _ = ''; // icirc	î), // U+00EE (238)	Latin small letter i with circumflex
	//	final public static char _ = ''; // iuml	ï), // U+00EF (239)	Latin small letter i with diaeresis
	//	final public static char _ = ''; // eth	ð), // U+00F0 (240)	Latin small letter eth
	//	final public static char _ = ''; // ntilde	ñ), // U+00F1 (241)	Latin small letter n with tilde
	//	final public static char _ = ''; // ograve	ò), // U+00F2 (242)	Latin small letter o with grave accent
	//	final public static char _ = ''; // oacute	ó), // U+00F3 (243)	Latin small letter o with acute accent
	//	final public static char _ = ''; // ocirc	ô), // U+00F4 (244)	Latin small letter o with circumflex
	//	final public static char _ = ''; // otilde	õ), // U+00F5 (245)	Latin small letter o with tilde
	//	final public static char _ = ''; // ouml	ö), // U+00F6 (246)	Latin small letter o with diaeresis
	//	final public static char _ = ''; // divide	÷), // U+00F7 (247)  division sign (obelus)
	//	final public static char _ = ''; // oslash	ø), // U+00F8 (248)	Latin small letter o with stroke (Latin small letter o slash)
	//	final public static char _ = ''; // ugrave	ù), // U+00F9 (249)	Latin small letter u with grave accent
	//	final public static char _ = ''; // uacute	ú), // U+00FA (250)	Latin small letter u with acute accent
	//	final public static char _ = ''; // ucirc	û), // U+00FB (251)	Latin small letter u with circumflex
	//	final public static char _ = ''; // uuml	ü), // U+00FC (252)	Latin small letter u with diaeresis
	//	final public static char _ = ''; // yacute	ý), // U+00FD (253)	Latin small letter y with acute accent
	//	final public static char _ = ''; // thorn	þ), // U+00FE (254)	Latin small letter thorn
	//	final public static char _ = ''; // yuml	ÿ), // U+00FF (255)	Latin small letter y with diaeresis
	//	final public static char _ = ''; // OElig	Œ), // U+0152 (338)	Latin capital ligature oe[e]
	//	final public static char _ = ''; // oelig	œ), // U+0153 (339)	Latin small ligature oe[e]
	//	final public static char _ = ''; // Scaron	Š), // U+0160 (352)	Latin capital letter s with caron
	//	final public static char _ = ''; // scaron	š), // U+0161 (353)	Latin small letter s with caron
	//	final public static char _ = ''; // Yuml	Ÿ), // U+0178 (376)	Latin capital letter y with diaeresis
	//	final public static char _ = ''; // fnof	ƒ), // U+0192 (402)	Latin small letter f with hook (function, florin)
	//	final public static char _ = ''; // circ	ˆ), // U+02C6 (710)	modifier letter circumflex accent
	//	final public static char _ = ''; // tilde	˜), // U+02DC (732)	small tilde
	//	final public static char _ = ''; // Alpha	Α), // U+0391 (913)	Greek capital letter Alpha
	//	final public static char _ = ''; // Beta	Β), // U+0392 (914)	Greek capital letter Beta
	//	final public static char _ = ''; // Gamma	Γ), // U+0393 (915)	Greek capital letter Gamma
	//	final public static char _ = ''; // Delta	Δ), // U+0394 (916)	Greek capital letter Delta
	//	final public static char _ = ''; // Epsilon	Ε), // U+0395 (917)	Greek capital letter Epsilon
	//	final public static char _ = ''; // Zeta	Ζ), // U+0396 (918)	Greek capital letter Zeta
	//	final public static char _ = ''; // Eta	Η), // U+0397 (919)	Greek capital letter Eta
	//	final public static char _ = ''; // Theta	Θ), // U+0398 (920)	Greek capital letter Theta
	//	final public static char _ = ''; // Iota	Ι), // U+0399 (921)	Greek capital letter Iota
	//	final public static char _ = ''; // Kappa	Κ), // U+039A (922)	Greek capital letter Kappa
	//	final public static char _ = ''; // Lambda	Λ), // U+039B (923)	Greek capital letter Lambda
	//	final public static char _ = ''; // Mu	Μ), // U+039C (924)	Greek capital letter Mu
	//	final public static char _ = ''; // Nu	Ν), // U+039D (925)	Greek capital letter Nu
	//	final public static char _ = ''; // Xi	Ξ), // U+039E (926)	Greek capital letter Xi
	//	final public static char _ = ''; // Omicron	Ο), // U+039F (927)	Greek capital letter Omicron
	//	final public static char _ = ''; // Pi	Π), // U+03A0 (928)	Greek capital letter Pi
	//	final public static char _ = ''; // Rho	Ρ), // U+03A1 (929)	Greek capital letter Rho
	//	final public static char _ = ''; // Sigma	Σ), // U+03A3 (931)	Greek capital letter Sigma
	//	final public static char _ = ''; // Tau	Τ), // U+03A4 (932)	Greek capital letter Tau
	//	final public static char _ = ''; // Upsilon	Υ), // U+03A5 (933)	Greek capital letter Upsilon
	//	final public static char _ = ''; // Phi	Φ), // U+03A6 (934)	Greek capital letter Phi
	//	final public static char _ = ''; // Chi	Χ), // U+03A7 (935)	Greek capital letter Chi
	//	final public static char _ = ''; // Psi	Ψ), // U+03A8 (936)	Greek capital letter Psi
	//	final public static char _ = ''; // Omega	Ω), // U+03A9 (937)	Greek capital letter Omega
	//	final public static char _ = ''; // alpha	α), // U+03B1 (945)	Greek small letter alpha
	//	final public static char _ = ''; // beta	β), // U+03B2 (946)	Greek small letter beta
	//	final public static char _ = ''; // gamma	γ), // U+03B3 (947)	Greek small letter gamma
	//	final public static char _ = ''; // delta	δ), // U+03B4 (948)	Greek small letter delta
	//	final public static char _ = ''; // epsilon	ε), // U+03B5 (949)	Greek small letter epsilon
	//	final public static char _ = ''; // zeta	ζ), // U+03B6 (950)	Greek small letter zeta
	//	final public static char _ = ''; // eta	η), // U+03B7 (951)	Greek small letter eta
	//	final public static char _ = ''; // theta	θ), // U+03B8 (952)	Greek small letter theta
	//	final public static char _ = ''; // iota	ι), // U+03B9 (953)	Greek small letter iota
	//	final public static char _ = ''; // kappa	κ), // U+03BA (954)	Greek small letter kappa
	//	final public static char _ = ''; // lambda	λ), // U+03BB (955)	Greek small letter lambda
	//	final public static char _ = ''; // mu	μ), // U+03BC (956)	Greek small letter mu
	//	final public static char _ = ''; // nu	ν), // U+03BD (957)	Greek small letter nu
	//	final public static char _ = ''; // xi	ξ), // U+03BE (958)	Greek small letter xi
	//	final public static char _ = ''; // omicron	ο), // U+03BF (959)	Greek small letter omicron
	//	final public static char _ = ''; // pi	π), // U+03C0 (960)	Greek small letter pi
	//	final public static char _ = ''; // rho	ρ), // U+03C1 (961)	Greek small letter rho
	//	final public static char _ = ''; // sigmaf	ς), // U+03C2 (962)	Greek small letter final sigma
	//	final public static char _ = ''; // sigma	σ), // U+03C3 (963)	Greek small letter sigma
	//	final public static char _ = ''; // tau	τ), // U+03C4 (964)	Greek small letter tau
	//	final public static char _ = ''; // upsilon	υ), // U+03C5 (965)	Greek small letter upsilon
	//	final public static char _ = ''; // phi	φ), // U+03C6 (966)	Greek small letter phi
	//	final public static char _ = ''; // chi	χ), // U+03C7 (967)	Greek small letter chi
	//	final public static char _ = ''; // psi	ψ), // U+03C8 (968)	Greek small letter psi
	//	final public static char _ = ''; // omega	ω), // U+03C9 (969)	Greek small letter omega
	//	final public static char _ = ''; // thetasym	ϑ), // U+03D1 (977)	Greek theta symbol
	//	final public static char _ = ''; // upsih	ϒ), // U+03D2 (978)	Greek Upsilon with hook symbol
	//	final public static char _ = ''; // piv	ϖ), // U+03D6 (982)	Greek pi symbol
	//	final public static char _ = ''; // ensp	 ), // U+2002 (8194)	en space
	//	final public static char _ = ''; // emsp	 ), // U+2003 (8195)	em space
	//	final public static char _ = ''; // thinsp	 ), // U+2009 (8201)	thin space
	//	final public static char _ = ''; // zwnj	 ), // U+200C (8204)	zero-width non-joiner
	//	final public static char _ = ''; // zwj	 ), // U+200D (8205)	zero-width joiner
	//	final public static char _ = ''; // lrm	 ), // U+200E (8206)	left-to-right mark
	//	final public static char _ = ''; // rlm	 ), // U+200F (8207)	right-to-left mark
	//	final public static char _ = ''; // ndash	–), // U+2013 (8211)	en dash
	//	final public static char _ = ''; // mdash	—), // U+2014 (8212)	em dash
	//	final public static char _ = ''; // lsquo	‘), // U+2018 (8216)	left single quotation mark
	//	final public static char _ = ''; // rsquo	’), // U+2019 (8217)	right single quotation mark
	//	final public static char _ = ''; // sbquo	‚), // U+201A (8218)	single low-9 quotation mark
	//	final public static char _ = ''; // ldquo	“), // U+201C (8220)	left double quotation mark
	//	final public static char _ = ''; // rdquo	”), // U+201D (8221)	right double quotation mark
	//	final public static char _ = ''; // bdquo	„), // U+201E (8222)	double low-9 quotation mark
	//	final public static char _ = ''; // dagger	†), // U+2020 (8224)	dagger, obelisk
	//	final public static char _ = ''; // Dagger	‡), // U+2021 (8225)	double dagger, double obelisk
	final public static char BULLET = '•'; // U+2022 (8226) bullet (black small circle)
	final public static char HELLIP = '…'; // U+2026 (8230) horizontal ellipsis (three dot leader)
	//	final public static char _ = ''; // permil	‰), // U+2030 (8240)	per mille sign
	//	final public static char _ = ''; // prime	′), // U+2032 (8242)	prime (minutes, feet)
	//	final public static char _ = ''; // Prime	″), // U+2033 (8243)	double prime (seconds, inches)
	//	final public static char _ = ''; // lsaquo	‹), // U+2039 (8249)	single left-pointing angle quotation mark
	//	final public static char _ = ''; // rsaquo	›), // U+203A (8250)	single right-pointing angle quotation mark
	//	final public static char _ = ''; // oline	‾), // U+203E (8254)	overline (spacing overscore)
	//	final public static char _ = ''; // frasl	⁄), // U+2044 (8260)	fraction slash (solidus)
	final public static char EURO = '€'; // U+20AC (8364) euro sign
	//	final public static char _ = ''; // image	ℑ), // U+2111 (8465)	black-letter capital I (imaginary part)
	//	final public static char _ = ''; // weierp	℘), // U+2118 (8472)	script capital P (power set, Weierstrass p)
	//	final public static char _ = ''; // real	ℜ), // U+211C (8476)	black-letter capital R (real part symbol)
	final public static char TRADEMARK = '™'; // U+2122 (8482) trademark symbol
	//	final public static char _ = ''; // alefsym	ℵ), // U+2135 (8501)	alef symbol (first transfinite cardinal)
	//	final public static char _ = ''; // larr	←), // U+2190 (8592)	 leftwards arrow
	//	final public static char _ = ''; // uarr	↑), // U+2191 (8593)	 upwards arrow
	//	final public static char _ = ''; // rarr	→), // U+2192 (8594)	 rightwards arrow
	//	final public static char _ = ''; // darr	↓), // U+2193 (8595)	 downwards arrow
	//	final public static char _ = ''; // harr	↔), // U+2194 (8596)	left right arrow
	//	final public static char _ = ''; // crarr	↵), // U+21B5 (8629)	downwards arrow with corner leftwards (carriage return)
	//	final public static char _ = ''; // lArr	⇐), // U+21D0 (8656)	leftwards double arrow
	//	final public static char _ = ''; // uArr	⇑), // U+21D1 (8657)	upwards double arrow
	//	final public static char _ = ''; // rArr	⇒), // U+21D2 (8658)	 rightwards double arrow
	//	final public static char _ = ''; // dArr	⇓), // U+21D3 (8659)	downwards double arrow
	//	final public static char _ = ''; // hArr	⇔), // U+21D4 (8660)	left right double arrow
	//	final public static char _ = ''; // forall	∀), // U+2200 (8704)	for all
	//	final public static char _ = ''; // part	∂), // U+2202 (8706)	partial differential
	//	final public static char _ = ''; // exist	∃), // U+2203 (8707)	there exists
	//	final public static char _ = ''; // empty	∅), // U+2205 (8709)	empty set (null set); see also U+8960, ⌀
	//	final public static char _ = ''; // nabla	∇), // U+2207 (8711)	del or nabla (vector differential operator)
	//	final public static char _ = ''; // isin	∈), // U+2208 (8712)	element of
	//	final public static char _ = ''; // notin	∉), // U+2209 (8713)	not an element of
	//	final public static char _ = ''; // ni	∋), // U+220B (8715)	contains as member
	//	final public static char _ = ''; // prod	∏), // U+220F (8719)	n-ary product (product sign)
	//	final public static char _ = ''; // sum	∑), // U+2211 (8721)	n-ary summation
	final public static char MINUS = '−'; // U+2212 (8722)	minus sign
	//	final public static char _ = ''; // lowast	∗), // U+2217 (8727)	asterisk operator
	//	final public static char _ = ''; // radic	√), // U+221A (8730)	square root (radical sign)
	//	final public static char _ = ''; // prop	∝), // U+221D (8733)	proportional to
	//	final public static char _ = ''; // infin	∞), // U+221E (8734)	infinity
	//	final public static char _ = ''; // ang	∠), // U+2220 (8736)	angle
	//	final public static char _ = ''; // and	∧), // U+2227 (8743)	logical and (wedge)
	//	final public static char _ = ''; // or	∨), // U+2228 (8744)	logical or (vee)
	//	final public static char _ = ''; // cap	∩), // U+2229 (8745)	intersection (cap)
	//	final public static char _ = ''; // cup	∪), // U+222A (8746)	union (cup)
	//	final public static char _ = ''; // int	∫), // U+222B (8747)	integral
	//	final public static char _ = ''; // there4	∴), // U+2234 (8756)	therefore sign
	//	final public static char _ = ''; // sim	∼), // U+223C (8764)	tilde operator (varies with, similar to)
	//	final public static char _ = ''; // cong	≅), // U+2245 (8773)	congruent to
	//	final public static char _ = ''; // asymp	≈), // U+2248 (8776)	almost equal to (asymptotic to)
	//	final public static char _ = ''; // ne	≠), // U+2260 (8800)	not equal to
	//	final public static char _ = ''; // equiv	≡), // U+2261 (8801)	identical to; sometimes used for 'equivalent to'
	//	final public static char _ = ''; // le	≤), // U+2264 (8804)	less-than or equal to
	//	final public static char _ = ''; // ge	≥), // U+2265 (8805)	greater-than or equal to
	//	final public static char _ = ''; // sub	⊂), // U+2282 (8834)	subset of
	//	final public static char _ = ''; // sup	⊃), // U+2283 (8835)	superset of
	//	final public static char _ = ''; // nsub	⊄), // U+2284 (8836)	not a subset of
	//	final public static char _ = ''; // sube	⊆), // U+2286 (8838)	subset of or equal to
	//	final public static char _ = ''; // supe	⊇), // U+2287 (8839)	superset of or equal to
	//	final public static char _ = ''; // oplus	⊕), // U+2295 (8853)	circled plus (direct sum)
	//	final public static char _ = ''; // otimes	⊗), // U+2297 (8855)	circled times (vector product)
	//	final public static char _ = ''; // perp	⊥), // U+22A5 (8869)	up tack (orthogonal to, perpendicular)[o]
	//	final public static char _ = ''; // sdot	⋅), // U+22C5 (8901)	dot operator
	//	final public static char _ = ''; // lceil	⌈), // U+2308 (8968)	left ceiling (APL upstile)
	//	final public static char _ = ''; // rceil	⌉), // U+2309 (8969)	right ceiling
	//	final public static char _ = ''; // lfloor	⌊), // U+230A (8970)	left floor (APL downstile)
	//	final public static char _ = ''; // rfloor	⌋), // U+230B (8971)	right floor
	//	final public static char _ = ''; // lang	〈), // U+2329 (9001)	left-pointing angle bracket (bra)
	//	final public static char _ = ''; // rang	〉), // U+232A (9002)	right-pointing angle bracket (ket)
	//	final public static char _ = ''; // loz	◊), // U+25CA (9674) lozenge
	//	final public static char _ = ''; // spades	♠), // U+2660 (9824) black spade suit
	//	final public static char _ = ''; // clubs	♣), // U+2663 (9827) black club suit (shamrock)
	//	final public static char _ = ''; // hearts	♥), // U+2665 (9829) black heart suit (valentine)
	//	final public static char _ = ''; // diams	♦); // U+2666 (9830) black diamond suit


	//
	private Utf8Char()
	{
	}

}
